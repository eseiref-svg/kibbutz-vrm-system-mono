--
-- PostgreSQL database dump
--

\restrict zMaeh4gzsMI7HBbLPX2zJoJYxjfs5YLILjg6M4ReQIAhvRzFVnFxyJWweMlFO76

-- Dumped from database version 13.22
-- Dumped by pg_dump version 13.22

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: address; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.address (
    address_id integer NOT NULL,
    street_name character varying(150) NOT NULL,
    house_no character varying(50) NOT NULL,
    additional character varying(150),
    city character varying(150) NOT NULL,
    zip_code character varying(50) NOT NULL,
    phone_no character varying(50) NOT NULL
);


ALTER TABLE public.address OWNER TO postgres;

--
-- Name: address_address_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.address_address_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.address_address_id_seq OWNER TO postgres;

--
-- Name: address_address_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.address_address_id_seq OWNED BY public.address.address_id;


--
-- Name: alert; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.alert (
    alert_id integer NOT NULL,
    transaction_id integer NOT NULL,
    alert_type character varying(50),
    severity character varying(20),
    created_at timestamp without time zone DEFAULT now(),
    CONSTRAINT alert_severity_check CHECK (((severity)::text = ANY ((ARRAY['low'::character varying, 'medium'::character varying, 'high'::character varying, 'critical'::character varying])::text[])))
);


ALTER TABLE public.alert OWNER TO postgres;

--
-- Name: TABLE alert; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.alert IS 'התראות על אי-עמידה בתנאי תשלום';


--
-- Name: COLUMN alert.alert_type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.alert.alert_type IS 'סוג ההתראה: upcoming_payment, payment_due_today, payment_overdue';


--
-- Name: COLUMN alert.severity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.alert.severity IS 'חומרת ההתראה: low, medium, high, critical';


--
-- Name: alert_alert_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.alert_alert_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.alert_alert_id_seq OWNER TO postgres;

--
-- Name: alert_alert_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.alert_alert_id_seq OWNED BY public.alert.alert_id;


--
-- Name: balance; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.balance (
    balance_id integer NOT NULL,
    debit numeric(10,2) DEFAULT 0.00 NOT NULL,
    credit numeric(10,2) DEFAULT 0.00 NOT NULL
);


ALTER TABLE public.balance OWNER TO postgres;

--
-- Name: balance_balance_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.balance_balance_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.balance_balance_id_seq OWNER TO postgres;

--
-- Name: balance_balance_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.balance_balance_id_seq OWNED BY public.balance.balance_id;


--
-- Name: branch; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.branch (
    branch_id integer NOT NULL,
    business boolean NOT NULL,
    name character varying(150) NOT NULL,
    description text,
    manager_id integer NOT NULL,
    balance_id integer NOT NULL
);


ALTER TABLE public.branch OWNER TO postgres;

--
-- Name: client; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.client (
    client_id integer NOT NULL,
    name character varying(150) NOT NULL,
    address_id integer NOT NULL,
    poc_name character varying(150) NOT NULL,
    poc_phone character varying(20) NOT NULL,
    poc_email character varying(150)
);


ALTER TABLE public.client OWNER TO postgres;

--
-- Name: client_client_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.client_client_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.client_client_id_seq OWNER TO postgres;

--
-- Name: client_client_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.client_client_id_seq OWNED BY public.client.client_id;


--
-- Name: notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications (
    notification_id integer NOT NULL,
    user_id integer NOT NULL,
    message text NOT NULL,
    type character varying(50) NOT NULL,
    related_id integer,
    is_read boolean DEFAULT false,
    created_at timestamp without time zone DEFAULT now()
);


ALTER TABLE public.notifications OWNER TO postgres;

--
-- Name: TABLE notifications; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.notifications IS 'טבלת התראות למשתמשים במערכת';


--
-- Name: COLUMN notifications.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.notifications.type IS 'סוג ההתראה - supplier_approved, supplier_rejected, וכו';


--
-- Name: COLUMN notifications.related_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.notifications.related_id IS 'מזהה הישות הקשורה להתראה';


--
-- Name: notifications_notification_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.notifications_notification_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.notifications_notification_id_seq OWNER TO postgres;

--
-- Name: notifications_notification_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.notifications_notification_id_seq OWNED BY public.notifications.notification_id;


--
-- Name: payment_req; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.payment_req (
    payment_req_id integer NOT NULL,
    payment_req_no integer NOT NULL,
    supplier_id integer NOT NULL,
    branch_id integer NOT NULL,
    transaction_id integer NOT NULL,
    payment_terms_id integer
);


ALTER TABLE public.payment_req OWNER TO postgres;

--
-- Name: payment_req_payment_req_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.payment_req_payment_req_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.payment_req_payment_req_id_seq OWNER TO postgres;

--
-- Name: payment_req_payment_req_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.payment_req_payment_req_id_seq OWNED BY public.payment_req.payment_req_id;


--
-- Name: payment_terms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.payment_terms (
    payment_terms_id integer NOT NULL,
    eom integer NOT NULL,
    description character varying(150)
);


ALTER TABLE public.payment_terms OWNER TO postgres;

--
-- Name: payment_terms_payment_terms_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.payment_terms_payment_terms_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.payment_terms_payment_terms_id_seq OWNER TO postgres;

--
-- Name: payment_terms_payment_terms_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.payment_terms_payment_terms_id_seq OWNED BY public.payment_terms.payment_terms_id;


--
-- Name: permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.permission (
    permissions_id integer NOT NULL,
    role_type character varying(20) NOT NULL
);


ALTER TABLE public.permission OWNER TO postgres;

--
-- Name: permission_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.permission_permissions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.permission_permissions_id_seq OWNER TO postgres;

--
-- Name: permission_permissions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.permission_permissions_id_seq OWNED BY public.permission.permissions_id;


--
-- Name: review; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.review (
    review_id integer NOT NULL,
    supplier_id integer NOT NULL,
    user_id integer NOT NULL,
    comment text,
    rate integer NOT NULL,
    date date DEFAULT CURRENT_DATE NOT NULL,
    CONSTRAINT review_rate_check CHECK (((rate >= 1) AND (rate <= 5)))
);


ALTER TABLE public.review OWNER TO postgres;

--
-- Name: review_review_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.review_review_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.review_review_id_seq OWNER TO postgres;

--
-- Name: review_review_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.review_review_id_seq OWNED BY public.review.review_id;


--
-- Name: sale; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.sale (
    sale_id integer NOT NULL,
    invoice integer NOT NULL,
    client_id integer NOT NULL,
    transaction_id integer NOT NULL,
    branch_id integer NOT NULL
);


ALTER TABLE public.sale OWNER TO postgres;

--
-- Name: sale_sale_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.sale_sale_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.sale_sale_id_seq OWNER TO postgres;

--
-- Name: sale_sale_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.sale_sale_id_seq OWNED BY public.sale.sale_id;


--
-- Name: supplier_supplier_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.supplier_supplier_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.supplier_supplier_id_seq OWNER TO postgres;

--
-- Name: supplier; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.supplier (
    supplier_id integer DEFAULT nextval('public.supplier_supplier_id_seq'::regclass) NOT NULL,
    name character varying(150) NOT NULL,
    address_id integer NOT NULL,
    poc_name character varying(150) NOT NULL,
    poc_phone character varying(50) NOT NULL,
    poc_email character varying(150) NOT NULL,
    supplier_field_id integer NOT NULL,
    payment_terms_id integer NOT NULL,
    status character varying(20) DEFAULT 'pending'::character varying NOT NULL,
    registry_date date DEFAULT CURRENT_DATE NOT NULL,
    CONSTRAINT supplier_status_check CHECK (((status)::text = ANY ((ARRAY['rejected'::character varying, 'approved'::character varying, 'pending'::character varying, 'deleted'::character varying])::text[])))
);


ALTER TABLE public.supplier OWNER TO postgres;

--
-- Name: supplier_field; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.supplier_field (
    supplier_field_id integer NOT NULL,
    field character varying(150) NOT NULL,
    tags text[]
);


ALTER TABLE public.supplier_field OWNER TO postgres;

--
-- Name: supplier_field_supplier_field_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.supplier_field_supplier_field_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.supplier_field_supplier_field_id_seq OWNER TO postgres;

--
-- Name: supplier_field_supplier_field_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.supplier_field_supplier_field_id_seq OWNED BY public.supplier_field.supplier_field_id;


--
-- Name: supplier_requests; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.supplier_requests (
    request_id integer NOT NULL,
    requested_by_user_id integer,
    branch_id integer,
    supplier_name character varying(255) NOT NULL,
    poc_name character varying(150),
    poc_email character varying(150),
    poc_phone character varying(50),
    status character varying(20) DEFAULT 'pending'::character varying,
    created_at date DEFAULT CURRENT_DATE,
    supplier_field_id integer,
    new_supplier_field character varying(150),
    requested_supplier_id integer
);


ALTER TABLE public.supplier_requests OWNER TO postgres;

--
-- Name: supplier_requests_request_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.supplier_requests_request_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.supplier_requests_request_id_seq OWNER TO postgres;

--
-- Name: supplier_requests_request_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.supplier_requests_request_id_seq OWNED BY public.supplier_requests.request_id;


--
-- Name: transaction; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.transaction (
    transaction_id integer NOT NULL,
    value numeric(10,2) NOT NULL,
    due_date date NOT NULL,
    actual_date date,
    status character varying(20) DEFAULT 'open'::character varying NOT NULL,
    alert_id integer,
    CONSTRAINT transaction_status_check CHECK (((status)::text = ANY ((ARRAY['open'::character varying, 'frozen'::character varying, 'deleted'::character varying, 'paid'::character varying])::text[])))
);


ALTER TABLE public.transaction OWNER TO postgres;

--
-- Name: transaction_transaction_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.transaction_transaction_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.transaction_transaction_id_seq OWNER TO postgres;

--
-- Name: transaction_transaction_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.transaction_transaction_id_seq OWNED BY public.transaction.transaction_id;


--
-- Name: user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public."user" (
    user_id integer NOT NULL,
    permissions_id integer NOT NULL,
    first_name character varying(150) NOT NULL,
    surname character varying(150) NOT NULL,
    email character varying(150) NOT NULL,
    phone_no character varying(50) NOT NULL,
    password character varying(255) NOT NULL,
    status character varying(20) DEFAULT 'active'::character varying NOT NULL,
    reset_token character varying(255),
    reset_token_expires timestamp with time zone,
    CONSTRAINT user_status_check CHECK (((status)::text = ANY ((ARRAY['active'::character varying, 'inactive'::character varying])::text[])))
);


ALTER TABLE public."user" OWNER TO postgres;

--
-- Name: user_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.user_user_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_user_id_seq OWNER TO postgres;

--
-- Name: user_user_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.user_user_id_seq OWNED BY public."user".user_id;


--
-- Name: address address_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.address ALTER COLUMN address_id SET DEFAULT nextval('public.address_address_id_seq'::regclass);


--
-- Name: alert alert_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alert ALTER COLUMN alert_id SET DEFAULT nextval('public.alert_alert_id_seq'::regclass);


--
-- Name: balance balance_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.balance ALTER COLUMN balance_id SET DEFAULT nextval('public.balance_balance_id_seq'::regclass);


--
-- Name: client client_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.client ALTER COLUMN client_id SET DEFAULT nextval('public.client_client_id_seq'::regclass);


--
-- Name: notifications notification_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications ALTER COLUMN notification_id SET DEFAULT nextval('public.notifications_notification_id_seq'::regclass);


--
-- Name: payment_req payment_req_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_req ALTER COLUMN payment_req_id SET DEFAULT nextval('public.payment_req_payment_req_id_seq'::regclass);


--
-- Name: payment_terms payment_terms_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_terms ALTER COLUMN payment_terms_id SET DEFAULT nextval('public.payment_terms_payment_terms_id_seq'::regclass);


--
-- Name: permission permissions_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission ALTER COLUMN permissions_id SET DEFAULT nextval('public.permission_permissions_id_seq'::regclass);


--
-- Name: review review_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.review ALTER COLUMN review_id SET DEFAULT nextval('public.review_review_id_seq'::regclass);


--
-- Name: sale sale_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sale ALTER COLUMN sale_id SET DEFAULT nextval('public.sale_sale_id_seq'::regclass);


--
-- Name: supplier_field supplier_field_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_field ALTER COLUMN supplier_field_id SET DEFAULT nextval('public.supplier_field_supplier_field_id_seq'::regclass);


--
-- Name: supplier_requests request_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_requests ALTER COLUMN request_id SET DEFAULT nextval('public.supplier_requests_request_id_seq'::regclass);


--
-- Name: transaction transaction_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transaction ALTER COLUMN transaction_id SET DEFAULT nextval('public.transaction_transaction_id_seq'::regclass);


--
-- Name: user user_id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user" ALTER COLUMN user_id SET DEFAULT nextval('public.user_user_id_seq'::regclass);


--
-- Name: address address_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.address
    ADD CONSTRAINT address_pkey PRIMARY KEY (address_id);


--
-- Name: alert alert_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alert
    ADD CONSTRAINT alert_pkey PRIMARY KEY (alert_id);


--
-- Name: balance balance_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.balance
    ADD CONSTRAINT balance_pkey PRIMARY KEY (balance_id);


--
-- Name: branch branch_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.branch
    ADD CONSTRAINT branch_pkey PRIMARY KEY (branch_id);


--
-- Name: client client_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.client
    ADD CONSTRAINT client_pkey PRIMARY KEY (client_id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (notification_id);


--
-- Name: payment_req payment_req_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_req
    ADD CONSTRAINT payment_req_pkey PRIMARY KEY (payment_req_id);


--
-- Name: payment_terms payment_terms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_terms
    ADD CONSTRAINT payment_terms_pkey PRIMARY KEY (payment_terms_id);


--
-- Name: permission permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.permission
    ADD CONSTRAINT permission_pkey PRIMARY KEY (permissions_id);


--
-- Name: review review_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.review
    ADD CONSTRAINT review_pkey PRIMARY KEY (review_id);


--
-- Name: sale sale_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sale
    ADD CONSTRAINT sale_pkey PRIMARY KEY (sale_id);


--
-- Name: supplier_field supplier_field_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_field
    ADD CONSTRAINT supplier_field_pkey PRIMARY KEY (supplier_field_id);


--
-- Name: supplier supplier_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier
    ADD CONSTRAINT supplier_pkey PRIMARY KEY (supplier_id);


--
-- Name: supplier_requests supplier_requests_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_requests
    ADD CONSTRAINT supplier_requests_pkey PRIMARY KEY (request_id);


--
-- Name: transaction transaction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transaction
    ADD CONSTRAINT transaction_pkey PRIMARY KEY (transaction_id);


--
-- Name: user user_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_email_key UNIQUE (email);


--
-- Name: user user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_pkey PRIMARY KEY (user_id);


--
-- Name: idx_alert_severity; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_alert_severity ON public.alert USING btree (severity);


--
-- Name: idx_alert_transaction_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_alert_transaction_id ON public.alert USING btree (transaction_id);


--
-- Name: idx_notifications_user_unread; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_notifications_user_unread ON public.notifications USING btree (user_id, is_read, created_at DESC);


--
-- Name: idx_transaction_alert_id; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_transaction_alert_id ON public.transaction USING btree (alert_id);


--
-- Name: idx_transaction_due_date; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_transaction_due_date ON public.transaction USING btree (due_date);


--
-- Name: idx_transaction_status; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX idx_transaction_status ON public.transaction USING btree (status);


--
-- Name: alert alert_transaction_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.alert
    ADD CONSTRAINT alert_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES public.transaction(transaction_id);


--
-- Name: branch branch_balance_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.branch
    ADD CONSTRAINT branch_balance_id_foreign FOREIGN KEY (balance_id) REFERENCES public.balance(balance_id);


--
-- Name: branch branch_manager_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.branch
    ADD CONSTRAINT branch_manager_foreign FOREIGN KEY (manager_id) REFERENCES public."user"(user_id);


--
-- Name: client client_address_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.client
    ADD CONSTRAINT client_address_id_foreign FOREIGN KEY (address_id) REFERENCES public.address(address_id);


--
-- Name: notifications notifications_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public."user"(user_id);


--
-- Name: payment_req payment_req_branch_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_req
    ADD CONSTRAINT payment_req_branch_id_foreign FOREIGN KEY (branch_id) REFERENCES public.branch(branch_id);


--
-- Name: payment_req payment_req_supplier_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_req
    ADD CONSTRAINT payment_req_supplier_id_foreign FOREIGN KEY (supplier_id) REFERENCES public.supplier(supplier_id);


--
-- Name: payment_req payment_req_transaction_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payment_req
    ADD CONSTRAINT payment_req_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES public.transaction(transaction_id);


--
-- Name: review review_supplier_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.review
    ADD CONSTRAINT review_supplier_id_foreign FOREIGN KEY (supplier_id) REFERENCES public.supplier(supplier_id);


--
-- Name: review review_user_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.review
    ADD CONSTRAINT review_user_id_foreign FOREIGN KEY (user_id) REFERENCES public."user"(user_id);


--
-- Name: sale sale_branch_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sale
    ADD CONSTRAINT sale_branch_id_foreign FOREIGN KEY (branch_id) REFERENCES public.branch(branch_id);


--
-- Name: sale sale_client_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sale
    ADD CONSTRAINT sale_client_id_foreign FOREIGN KEY (client_id) REFERENCES public.client(client_id);


--
-- Name: sale sale_transaction_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.sale
    ADD CONSTRAINT sale_transaction_id_foreign FOREIGN KEY (transaction_id) REFERENCES public.transaction(transaction_id);


--
-- Name: supplier supplier_address_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier
    ADD CONSTRAINT supplier_address_id_foreign FOREIGN KEY (address_id) REFERENCES public.address(address_id);


--
-- Name: supplier supplier_field_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier
    ADD CONSTRAINT supplier_field_id_foreign FOREIGN KEY (supplier_field_id) REFERENCES public.supplier_field(supplier_field_id);


--
-- Name: supplier supplier_payment_terms_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier
    ADD CONSTRAINT supplier_payment_terms_id_foreign FOREIGN KEY (payment_terms_id) REFERENCES public.payment_terms(payment_terms_id);


--
-- Name: supplier_requests supplier_requests_branch_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_requests
    ADD CONSTRAINT supplier_requests_branch_id_fkey FOREIGN KEY (branch_id) REFERENCES public.branch(branch_id);


--
-- Name: supplier_requests supplier_requests_requested_by_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_requests
    ADD CONSTRAINT supplier_requests_requested_by_user_id_fkey FOREIGN KEY (requested_by_user_id) REFERENCES public."user"(user_id);


--
-- Name: supplier_requests supplier_requests_supplier_field_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.supplier_requests
    ADD CONSTRAINT supplier_requests_supplier_field_id_fkey FOREIGN KEY (supplier_field_id) REFERENCES public.supplier_field(supplier_field_id);


--
-- Name: transaction transaction_alert_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.transaction
    ADD CONSTRAINT transaction_alert_id_foreign FOREIGN KEY (alert_id) REFERENCES public.alert(alert_id);


--
-- Name: user user_permissions_id_foreign; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public."user"
    ADD CONSTRAINT user_permissions_id_foreign FOREIGN KEY (permissions_id) REFERENCES public.permission(permissions_id);


--
-- PostgreSQL database dump complete
--

\unrestrict zMaeh4gzsMI7HBbLPX2zJoJYxjfs5YLILjg6M4ReQIAhvRzFVnFxyJWweMlFO76

